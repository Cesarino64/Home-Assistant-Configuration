############################################################
#
# Home Assistant Scripts
#
############################################################

#Turn off devices
good_night:
  sequence:
    - service: light.turn_off
      data:
        entity_id: group.lights
    - service: switch.turn_off
      data:
        entity_id: group.lamps
    - service: switch.turn_off
      data:
        entity_id: input_boolean.ifttt_office_lamp
    - service: media_player.turn_off
      data:
        entity_id: media_player.living_room_home
    - service: media_player.turn_off
      data:
        entity_id: media_player.living_room
    - service: media_player.turn_off
      data:
        entity_id: media_player.bed_room
    - service: media_player.turn_off
      data:
        entity_id: media_player.outside
    - service: media_player.turn_off
      data:
        entity_id: media_player.tv_ua55ju6400
    - service: remote.turn_off
      data:
        entity_id: remote.living_room
start_air_conditioner:
  sequence:
    - service: input_select.select_option
      data:
        entity_id: input_select.ac_fan_mode
        option: AUTO
    - service: input_select.select_option
      data:
        entity_id: input_select.ac_swing_mode
        option: TOP
    - service: input_number.set_value
      data:
        entity_id: input_number.ac_target_temp
        value: 21
    - service: input_select.select_option
      data:
        entity_id: input_select.ac_operation_mode
        option: COOL
stop_air_conditioner:
  sequence:
    - service: input_select.select_option
      data:
        entity_id: input_select.ac_operation_mode
        option: Power Off
# Script to send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_processing
    # data_template:
    #   speech_message:
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig

speech_processing:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: 'broadcast/lastmsg'
        payload: 'This Message is from {{now().strftime("%I")}}:{{now().strftime("%M")}} {{now().strftime("%p")}}. {{speech_message}}'
        retain: true

    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: group.family
              state: 'home'
            - condition: state
              entity_id: input_boolean.guest_mode
              state: 'on'
        - condition: or
          conditions:
            - condition: time
              after: '08:00:00'
              before: '20:00:00'
            - condition: state
              entity_id: input_boolean.alert_mode
              state: 'on'
        - condition: state
          entity_id: input_boolean.speech_notifications
          state: 'on'

    - service: notify.google_assistant_broadcast
      data_template:
        message: '{{speech_message}}'
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.alert_mode
        - input_boolean.lastmsg
